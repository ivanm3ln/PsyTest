using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Microsoft.Win32;

namespace psytest
{
    /// <summary>
    /// Логика взаимодействия для StudentTesting.xaml
    /// </summary>
    public partial class StudentTesting : Page
    {

        int k = 0;

        int[] answ;

        public List<string> qsts;

        public List<string> props;

        int[] propVal;

        string NameStudent;

        string SurnameStudent;

        string PatronymicStudent;

        string Group;

        bool Gender;

        public StudentTesting(string nameStudent, string surnameStudent,
                       string patronymicStudent, string group, bool gender)
        {
            InitializeComponent();
            rb1.IsChecked = true;

            NameStudent = nameStudent;
            SurnameStudent = surnameStudent;
            PatronymicStudent = patronymicStudent;
            Group = group;
            Gender = gender;

            answ = new int[66];

            propVal = new int[11];

            btnNxtPage.Visibility = Visibility.Hidden;

            props = new List<string>()
            {"Культ силы (мин 18)",
"Допустимость агрессии (мин 21)",
"Интолерантность (мин 14)",
"Конвенциональное принуждение (мин 21)",
"Социальный пессимизм (мин 21)",
"Мистичность (мин 21)",
"Деструктивностъ и цинизм (мин 21)",
"Протестная активность (мин 21)",
"Нормативный нигилизм (мин 14)",
"Антиинтрацепция(мин 17)",
"Конформизм (мин 21)" };

            qsts = new List<string>() { "Все люди делятся на сильных и слабых. ",
"Добро должно быть с кулаками, уметь защитить себя.",
"Исконный образ жизни моего народа можно защитить только силой. ",
"Люди не будут хорошо трудиться, если их не заставлять. ",
"При общении с приезжими надо показывать, кто в доме хозяин.",
"Почти все разногласия нельзя решить с помощью переговоров. ",
"Если меня кто-то оскорбит, я могу действовать очень жестко. ",
"Часто попадаются люди, которые раздражают меня одним своим присутствием",
"Иногда невозможно удержаться от драки. ",
"Надписи на стенах - приемлемый способ выразить свое недовольство, если нет других путей. ",
"Не стоит церемониться с людьми, которые тебе не нравятся. ",
"Человека можно понять, если его разозлили, а он ударил в ответ или сломал какую-либо вещь. ",
"К некоторым нациям и народам трудно хорошо относиться.",
"Каждый человек либо хороший, либо плохой. ",
"Мой принцип: «Никогда не доверять «чужакам».",
"Нормально считать, что твой народ лучше, чем все остальные.",
"Я не могу представить человека другой расы своим близким другом. ",
"Я не хочу, чтобы среди моих друзей были люди разных национальностей. ",
"Мне всегда важно, чтобы обидчик был наказан, а жертва отомщена. ",
"Многие социальные проблемы будут решены, если мы избавимся от аморальных и малодушных людей. ",
"Прежде всего, нашему обществу нужна дисциплина и решительность в борьбе за наши исконные ценности. ",
"Оскорбление чести и достоинства всегда нужно карать. ",
"В нашем обществе добиться справедливости важнее, чем проявлять жалость к отдельным людям. ",
"Некоторые преступления заслуживают более тяжкого наказания, чем тюрьма: иногда преступников следует публично казнить.",
"Вполне возможно, что эта серия войн и конфликтов раз и навсегда будет остановлена катастрофой, которая уничтожит мир. ",
"В нашем обществе нет смысла быть честным и заботиться о среде обитания - все равно другие продолжают обманывать и все портить",
"Сегодня везде царит неуверенность, мы должны быть готовы к кризисам, жестким конфликтам и переворотам. ",
"Наше общество стоит на пороге гибели. ",
"Нет смысла в напряженной учебе или работе — все равно все достается тем, кого устроят родители. ",
"Я отлично знаю, что в этом обществе от меня ничего не зависит.",
"Есть знаки, в которых скрыто особое знание. ",
"Каждый должен верить в свое предназначение, идти дорогой, которая предначертана судьбой. ",
"Люди не осознают, что наша жизнь управляется заговорами и тайными организациями. ",
"Наука не всегда полезна, поскольку существует много такого, что человеческий разум не в силах понять. ",
"От символов, которые используют люди, часто зависит их судьба.",
"Тот, кто понимает тайное значение древних символов, может влиять на других людей. ",
"Безопаснее всего предполагать, что в каждом человеке есть злые черты, которые вылезут на поверхность при возможности.",
"Все продается и все покупается, вопрос только в цене. ",
"Мне не нравятся большинство окружающих меня людей и вообще мир вокруг. ",
"Человек человеку волк, и все заботятся лишь о себе. ",
"Чем больше возможностей, тем вероятнее, что человек ступит на плохой путь. ",
"Со всеми людьми можно найти общий язык.",
"В наше время требуется больше увлеченных романтиков и энтузиастов. ",
"Люди, у которых нет планов преобразовать наше общество,кажутся мне странными. ",
"Известности и признания заслуживают только смелые люди, действующие наперекор пассивному большинству. ",
"Худший недостаток — быть занудным человеком, который всегда действует по инструкции. ",
"Человека, который много сделал для человечества, можно простить за жесткие поступки и неуживчивый характер.",
"Я считаю, что люди должны быть способны отдать жизнь за свои идеи. ",
"Нам нужны не программы и законы, а несколько храбрых, неутомимых и преданных лидеров, в которых люди могут верить.",
"Правы люди, которые всегда следуют пословице: «Если нельзя, но очень хочется, то можно».",
"Среди тех, кто сидит в тюрьме, многие — настоящие герои. ",
"Только слабые и трусливые люди стремятся выполнять все правила и законы. ",
"Законы у нас принимают не(!) для того, чтобы в стране был порядок. ",
"Работа полицейских не заслуживает уважения. ",
"Бизнесмен или хороший менеджер сейчас важнее для общества, чем художник или профессор. ",
"Нашему народу нужно меньше рассуждать и больше заниматься конкретными делами.",
"Никому не интересны переживания разных интеллигентов.",
"Обсуждение разных взглядов только запутывает людей - решение многих социальных проблем лежит на поверхности. ",
"Слишком часто люди выносят свою личную жизнь наружу. ",
"Рассказы, где описываются поступки или приключения, читать интереснее чем повествующие о мыслях и чувствах. ",
"Если точку зрения разделяет большинство моих друзей, значит, она верная. ",
"Обычно я делаю то, о чем меня просят друзья, даже если это не нравится другим. ",
"Я всегда поддержу своих друзей, даже если общество против них. ",
"Я часто развлекаюсь в компании с друзьями, хотя мне не совсем по душе некоторые наши проделки. ",
"Драться за честь своей команды — почетнее, чем быть успешным индивидуалистом. ",
"Надо пройти через опасности и испытания, чтобы тебя приняли в команду настоящих друзей. "};

            TestName.Content = "Диагностика экстремизм";

            QuestionText.Text = (k + 1) + ". " + qsts.ElementAt(k);

            for (int i = 0; i < 66; i++)
            {
                answ[i] = 1;
            }
        }

        private void btnGoBack_Click(object sender, RoutedEventArgs e)
        {
            if (k != 0)
            {

                int n = getAnsw();
                answ[k] = n;


                k--;
                QuestionText.Text = (k + 1) + ". " + qsts.ElementAt(k);


                setAnsw(answ[k]);
            }
            else
            {
                MessageBox.Show($"Это первый вопрос!", "Внимание!",
                    MessageBoxButton.OK, MessageBoxImage.Error);
            }

        }

        private void btnNext_Click(object sender, RoutedEventArgs e)
        {

            if (k != 66 - 1)
            {
                int n = getAnsw();
                answ[k] = n;

                k++;
                QuestionText.Text = (k + 1) + ". " + qsts.ElementAt(k);

                setAnsw(answ[k]);
            }
            else
            {
                MessageBox.Show($"Это последний вопрос!", "Внимание!",
                    MessageBoxButton.OK, MessageBoxImage.Error);
            }

            if (k == 66 - 1)
            {
                btnNxtPage.Visibility = Visibility.Visible;
            }
        }

        public int getAnsw()
        {
            int n = 0;

            if (rb1.IsChecked == true)
            {
                n = 1;
            }
            else if (rb2.IsChecked == true)
            {
                n = 2;
            }
            else if (rb3.IsChecked == true)
            {
                n = 3;
            }
            else if (rb4.IsChecked == true)
            {
                n = 4;
            }
            else if (rb5.IsChecked == true)
            {
                n = 5;
            }


            return n;
        }

        public void setAnsw(int n)
        {
            switch (n)
            {
                case 1:
                    rb1.IsChecked = true;
                    break;
                case 2:
                    rb2.IsChecked = true;
                    break;
                case 3:
                    rb3.IsChecked = true;
                    break;
                case 4:
                    rb4.IsChecked = true;
                    break;
                case 5:
                    rb5.IsChecked = true;
                    break;
            }
        }

        private void btnNxtPage_Click(object sender, RoutedEventArgs e)
        {
            int n = getAnsw();
            answ[k] = n;

            string str = "";


                for(int j = 0; j < 66; j++)
                {
                    if ((j >= 0) && (j <= 5)){
                        propVal[0] += answ[j];
                    
                    }

     
                    
                

                    if ((j >= 6) && (j <= 11))
                    {
                         propVal[1] += answ[j];
                }

         
                    
                

                if ((j >= 12) && (j <= 17))
                    {
                    propVal[2] += answ[j];
                    
                }

  
                    
                

                if ((j >= 18) && (j <= 23))
                    {
                    propVal[3] += answ[j];
                }

                   
                

                if ((j >= 24) && (j <= 29))
                    {
                    propVal[4] += answ[j];
                    
                }

            
                    
                

                if ((j >= 30) && (j <= 35))
                {
                    propVal[5] += answ[j];
                   
                }

                    
                

                if ((j >= 36) && (j <= 41))
                {
                    propVal[6] += answ[j];
                    
                }
                   
                

                if ((j >= 42) && (j <= 47))
                {
                    propVal[7] += answ[j];
                    
                }

                    
                

                if ((j >= 48) && (j <= 53))
                {
                    propVal[8] += answ[j];
                    
                }

                    
                

                if ((j >= 54) && (j <= 59))
                {
                    propVal[9] += answ[j];
                    
                }

                

                if ((j >= 60) && (j <= 66))
                {
                    propVal[10] += answ[j];
                    
                }

                
                    
                
            }

            props[10] += " = " + Convert.ToString(propVal[10]);
            props[9] += " = " + Convert.ToString(propVal[9]);
            props[8] += " = " + Convert.ToString(propVal[8]);
            props[7] += " = " + Convert.ToString(propVal[7]);
            props[6] += " = " + Convert.ToString(propVal[6]);
            props[5] += " = " + Convert.ToString(propVal[5]);
            props[4] += " = " + Convert.ToString(propVal[4]);
            props[3] += " = " + Convert.ToString(propVal[3]);
            props[2] += " = " + Convert.ToString(propVal[2]);
            props[1] += " = " + Convert.ToString(propVal[1]);
            props[0] += " = " + Convert.ToString(propVal[0]);

            str = "Результаты диагностики студента:" +
                "\nФамилия: " + SurnameStudent +
                "\nИмя: " + NameStudent + 
                "\nОтчество: " + PatronymicStudent +
                "\nГруппа: " + Group +
                "\nПол: ";
            if (Gender)
            {
                str += "Муж\n";
            } else
            {
                str += "Жен\n";
            }

            foreach(string prop in props)
            {
                str += "\n" + prop;
            }

            Directory.CreateDirectory("C:\\Tests\\");

                File.WriteAllText("C:\\Tests\\" + SurnameStudent + NameStudent + Group + ".txt", str);

            MessageBox.Show("Файл сохранен!");

            Application.Current.Shutdown();
        }
    }
}
